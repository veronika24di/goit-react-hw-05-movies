{"version":3,"file":"static/js/749.b76f7664.chunk.js","mappings":"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","sources":["Api/Api.js","components/Movies/MovieDetails.jsx","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30"],"sourcesContent":["import axios from 'axios';\n\nconst trandingMovie = 'trending/movie/day';\nconst nameMovie = 'search/movie';\n\nconst movieApi = axios.create({ baseURL: 'https://api.themoviedb.org/3/' });\nexport const moviesFetch = async () => {\n  const response = await movieApi.get(trandingMovie, {\n    params: { api_key: '61a1e6b0683b97af3e2dd2d066889e95' },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get(`/${nameMovie}`, {\n    params: {\n      api_key: '61a1e6b0683b97af3e2dd2d066889e95',\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`, {\n    params: {\n      api_key: '61a1e6b0683b97af3e2dd2d066889e95',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: '61a1e6b0683b97af3e2dd2d066889e95',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: '61a1e6b0683b97af3e2dd2d066889e95',\n    },\n  });\n  return response.data;\n};","import { searchMovieById } from 'Api/Api';\nimport { useEffect, useState, useRef } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport css from './Movies.module.css';\n\nconst MovieDetails = () => {\n  const { moviesId } = useParams();\n  const location = useLocation();\n  const refLocation = useRef(location.state?.location);\n  const from = location.state?.from ?? '/';\n  const [movieById, setMovieById] = useState();\n  useEffect(() => {\n    searchMovieById(moviesId)\n      .then(response => {\n        setMovieById(response);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, [moviesId]);\n\n  if (!movieById) {\n    return <p className={css.error}>404 Not Found</p>;\n  }\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movieById;\n  return (\n    <div className={css.wrapper}>\n      <Link to={refLocation.current ?? '/'} className={css.link}>\n        Go back\n      </Link>\n      <div className={css.wrapperTitle}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n          width=\"300\"\n          height=\"400\"\n        />\n        <div className={css.wrapperDescription}>\n          <h2>\n            {title}({new Date(release_date).getFullYear()})\n          </h2>\n          <p>User Score: {Math.floor(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres ? genres.map(genre => genre.name).join(' ') : '-'}</p>\n        </div>\n      </div>\n      <div className={css.wrapper}>\n        <div className={css.wrapperTitle}>\n          <NavLink to=\"cast\" state={{ from: from }} className={css.link}>\n            Cast\n          </NavLink>\n          <NavLink to=\"reviews\" state={{ from: from }} className={css.link}>\n            Reviews\n          </NavLink>\n        </div>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Movies_wrapper__vWoXg\",\"wrapperTitle\":\"Movies_wrapperTitle__QOA4H\",\"wrapperDescription\":\"Movies_wrapperDescription__b6oU4\",\"error\":\"Movies_error__ga8bx\",\"list\":\"Movies_list__JEO-P\",\"item\":\"Movies_item__+Yifn\",\"link\":\"Movies_link__0oDWE\",\"description\":\"Movies_description__k3l7V\"};"],"names":["movieApi","axios","baseURL","moviesFetch","get","params","api_key","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","id","searchMovieByCast","searchMovieByReviews","moviesId","useParams","location","useLocation","refLocation","useRef","state","from","useState","movieById","setMovieById","useEffect","then","catch","message","console","log","className","css","title","poster_path","release_date","vote_average","overview","genres","to","current","src","alt","width","height","Date","getFullYear","Math","floor","map","genre","name","join"],"sourceRoot":""}