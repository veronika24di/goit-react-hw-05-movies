{"version":3,"file":"static/js/415.86abc1df.chunk.js","mappings":"8SAKMA,EAAWC,EAAAA,EAAAA,OAAa,CAAEC,QAAS,kCAC5BC,EAAW,mCAAG,oGACFH,EAASI,IALZ,qBAK+B,CACjDC,OAAQ,CAAEC,QAAS,sCAFI,cACnBC,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAkB,mCAAG,WAAMC,GAAN,uFACTX,EAASI,IAAT,WAXP,gBAWqC,CACnDC,OAAQ,CACNC,QAAS,mCACTM,MAAOD,KAJqB,cAC1BJ,EAD0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,sDAUlBI,EAAe,mCAAG,WAAMC,GAAN,uFACNd,EAASI,IAAT,iBAAuBU,GAAM,CAClDT,OAAQ,CACNC,QAAS,sCAHgB,cACvBC,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfO,EAAiB,mCAAG,WAAMD,GAAN,uFACRd,EAASI,IAAT,iBAAuBU,EAAvB,YAAqC,CAC1DT,OAAQ,CACNC,QAAS,sCAHkB,cACzBC,EADyB,yBAMxBA,EAASC,MANe,2CAAH,sDASjBQ,EAAoB,mCAAG,WAAMF,GAAN,uFACXd,EAASI,IAAT,iBAAuBU,EAAvB,YAAqC,CAC1DT,OAAQ,CACNC,QAAS,sCAHqB,cAC5BC,EAD4B,yBAM3BA,EAASC,MANkB,2CAAH,qD,6FCtCpBS,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAAA,EAAAA,KAAf,SACGJ,GACCA,EAAOK,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,YAApB,OACT,eAAaL,UAAWC,EAAAA,EAAAA,KAAxB,UACE,UAAC,KAAD,CACEK,GAAE,kBAAab,GACfc,MAAO,CAAET,SAAAA,GACTE,UAAWC,EAAAA,EAAAA,KAHb,WAKE,gBACEO,IAAG,yCAAoCH,GACvCI,IAAKL,EACLM,MAAM,MACNC,OAAO,SAET,iBAAMX,UAAWC,EAAAA,EAAAA,YAAjB,SAAmCE,GAAQC,QAZtCX,EADA,KAmBlB,C,6ECCD,UAxBa,WACT,OAA0CmB,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACNjC,EAAAA,EAAAA,MACKkC,MAAK,SAAA9B,GACF4B,EAAiB5B,EACpB,IACA+B,OAAM,YAAkB,IAAfC,EAAc,EAAdA,QACNC,QAAQC,IAAIF,EACf,GACR,GAAE,IAEEL,GAKD,0BACI,SAAC,IAAD,CAAYhB,OAAQgB,OALjB,wCAQd,C,oBCzBD,KAAgB,QAAU,wBAAwB,aAAe,6BAA6B,mBAAqB,mCAAmC,MAAQ,sBAAsB,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,qBAAqB,YAAc,4B","sources":["Api/Api.js","components/Movies/MoviesList.jsx","pages/Home.jsx","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30"],"sourcesContent":["import axios from 'axios';\n\nconst trandingMovie = 'trending/movie/day';\nconst nameMovie = 'search/movie';\n\nconst movieApi = axios.create({ baseURL: 'https://api.themoviedb.org/3/' });\nexport const moviesFetch = async () => {\n  const response = await movieApi.get(trandingMovie, {\n    params: { api_key: '61a1e6b0683b97af3e2dd2d066889e95' },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get(`/${nameMovie}`, {\n    params: {\n      api_key: '61a1e6b0683b97af3e2dd2d066889e95',\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`, {\n    params: {\n      api_key: '61a1e6b0683b97af3e2dd2d066889e95',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: '61a1e6b0683b97af3e2dd2d066889e95',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: '61a1e6b0683b97af3e2dd2d066889e95',\n    },\n  });\n  return response.data;\n};","import { Link, useLocation } from 'react-router-dom';\nimport css from './Movies.module.css';\nimport PropTypes from 'prop-types';\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {movies &&\n        movies.map(({ id, name, title, poster_path }) => (\n          <li key={id} className={css.item}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ location }}\n              className={css.link}\n            >\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={title}\n                width=\"150\"\n                height=\"200\"\n              />\n              <span className={css.description}>{name || title}</span>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};","import { useState, useEffect } from \"react\";\nimport { moviesFetch } from \"Api/Api\";\nimport { MoviesList } from 'components/Movies/MoviesList';\n\nconst Home = () => {\n    const [trendingFilms, setTrendingFilms] = useState([]);\n\n    useEffect(() => {\n        moviesFetch()\n            .then(response => {\n                setTrendingFilms(response);\n            })\n            .catch(({ message }) => {\n                console.log(message);\n            })\n    }, []);\n\n    if (!trendingFilms) {\n        return <p>404 Not Found</p>;\n    }\n\n    return (\n        <div>\n            <MoviesList movies={trendingFilms}/>\n        </div>\n    )\n}\n\nexport default Home;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Movies_wrapper__vWoXg\",\"wrapperTitle\":\"Movies_wrapperTitle__QOA4H\",\"wrapperDescription\":\"Movies_wrapperDescription__b6oU4\",\"error\":\"Movies_error__ga8bx\",\"list\":\"Movies_list__JEO-P\",\"item\":\"Movies_item__+Yifn\",\"link\":\"Movies_link__0oDWE\",\"description\":\"Movies_description__k3l7V\"};"],"names":["movieApi","axios","baseURL","moviesFetch","get","params","api_key","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","id","searchMovieByCast","searchMovieByReviews","MoviesList","movies","location","useLocation","className","css","map","name","title","poster_path","to","state","src","alt","width","height","useState","trendingFilms","setTrendingFilms","useEffect","then","catch","message","console","log"],"sourceRoot":""}